"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[7758],{"./src/stories/Header.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_app_components_Header_Header__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/components/Header/Header.tsx"),_app_components_DropdownMenu_DropdownMenu__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/app/components/DropdownMenu/DropdownMenu.tsx"),_app_components_Breadcrumb_Breadcrumb__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/app/components/Breadcrumb/Breadcrumb.tsx"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Header",component:_app_components_Header_Header__WEBPACK_IMPORTED_MODULE_1__.h,parameters:{layout:"padded"},args:{toggle:!1},tags:["autodocs"]};var Default=function Template(args){var _useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);_useState[0],_useState[1];return __jsx(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,__jsx(_app_components_Header_Header__WEBPACK_IMPORTED_MODULE_1__.h,{breadcrumb:__jsx(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,__jsx(_app_components_Breadcrumb_Breadcrumb__WEBPACK_IMPORTED_MODULE_3__.c,{pageName:"Breadcrumb"},__jsx(_app_components_Breadcrumb_Breadcrumb__WEBPACK_IMPORTED_MODULE_3__.a,{pageName:"Breadcrumb"}))),onClick:function onClick(){}},__jsx(_app_components_Header_Header__WEBPACK_IMPORTED_MODULE_1__.X,{name:"Username"},__jsx(_app_components_DropdownMenu_DropdownMenu__WEBPACK_IMPORTED_MODULE_2__.GV,{dropDownMenu:!0},__jsx(_app_components_DropdownMenu_DropdownMenu__WEBPACK_IMPORTED_MODULE_2__.Cs,{content:"Settings"}),__jsx(_app_components_DropdownMenu_DropdownMenu__WEBPACK_IMPORTED_MODULE_2__.M8,{content:"Item 1"}),__jsx(_app_components_DropdownMenu_DropdownMenu__WEBPACK_IMPORTED_MODULE_2__.M8,{content:"Item 2"}),__jsx(_app_components_DropdownMenu_DropdownMenu__WEBPACK_IMPORTED_MODULE_2__.M8,{content:"Settings",typeIcon:"settings"})))))}.bind({});Default.args={},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const [isOpenHeader, setIsOpenHeader] = useState(false);\n  const toggleHeader = () => {\n    setIsOpenHeader(!isOpenHeader);\n  };\n  return <>\r\n      <Header breadcrumb={<>\r\n            <BreadcrumbRoot pageName="Breadcrumb">\r\n              <Breadcrumb pageName="Breadcrumb" />\r\n            </BreadcrumbRoot>\r\n          </>} onClick={() => {}}>\r\n        <HeaderProfile name="Username">\r\n          <DropDownMenu dropDownMenu>\r\n            <DropDownMenuTitle content="Settings" />\r\n            <DropDownMenuItem content="Item 1" />\r\n            <DropDownMenuItem content="Item 2" />\r\n            <DropDownMenuItem content="Settings" typeIcon="settings" />\r\n          </DropDownMenu>\r\n        </HeaderProfile>\r\n      </Header>\r\n    </>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);